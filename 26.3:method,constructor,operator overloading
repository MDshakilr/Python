#method overloading
'''
class my_calculator:
    def product(self,num1,num2):
        print(num1+num2)

#python a same name a multiple methods thakbe ma
#jodi thake tahole shobar last method kaj korbe baki gula korbe na

c1 =my_calculator()
c1.product(3,5)
c1.product(2,5)

'''
class my_calculator:
    def product(self,num1=None,num2=None,num3=None):
        if num1!=None and num2!=None and num3!= None:
            print(num1*num2*num3)
        elif num1 != None and num2 != None:
            print(num1*num2)
        else:
            print(1*num1)

    #python a same name a multiple methods thakbe ma
#jodi thake tahole shobar last method kaj korbe baki gula korbe na

c1 =my_calculator()
c1.product(3,5)
c1.product(2,4,5)
c1.product(2)


#n"th parameter

class MyCal:
    def product(self, *num):
        pro = 1
        for x in num:
            pro *= x
        print(pro)

c1 = MyCal()
c1.product(5, 6, 8, 8, 9)








#constructor overloadimg

#constucttor overloading possible na directly
class Student:
    def __init__(self, **info):     #** keyword arrgument
        if len(info) == 3:
            self.name = info['name']
            self.id = info["id"]
            self.cgpa = info['cgpa']
        elif len(info) == 2:
            self.name = info['name']
            self.id = info['id']
        elif len(info) == 1:
            self.name = info['name']
        else:
            print("bye")

# Creating instances of Student class with keyword arguments
s1 = Student(name="shakil", id="345", cgpa="3.98")
s2 = Student(name="rafi", id="346")
s3 = Student(name="babor")
print(s1.name,s1.id,s1.cgpa)
print(s2.name,s2.id)
print(s3.name)






class Student:
    def __init__(self, *info):  # Using *info to accept anonymous arguments
        if len(info) == 3:
            self.name = info[0]
            self.id = info[1]
            self.cgpa = info[2]
        elif len(info) == 2:
            self.name = info[0]
            self.id = info[1]
        elif len(info) == 1:
            self.name = info[0]
        else:
            print("bye")

# Creating instances of Student class with positional arguments
s1 = Student("shakil", "345", "3.98")
s2 = Student("rafi", "346")
s3 = Student("babor")

print(s1.name, s1.id, s1.cgpa)
print(s2.name, s2.id)
print(s3.name)



#operator overloading

