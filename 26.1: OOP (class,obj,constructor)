#Python is an object oriented programming language.


#Class''' & Object in Python

'''
Class is a blueprint for creating objects.

class Student:

name =

“karan kumar”

#creating class

#creating object (instance)

s1 = Student( )

print( s1.name )
'''

class Student: #student= class

    name="shakil"  #class atribuite
    age=34

s1 = Student() # s1=object
print("Name:",s1.name)

s2 = Student()
print(s2.age)



#init/constructor
class Car:
    def __init__(x):

        print("hi")

s1 = Car()


class Car:
    def __init__(x,name,mark):
        x.nam=name  #object atribute
        x.mark=mark
        print("hello")


s1 = Car("bmw",45)
print(s1.nam)
print(s1.mark)
s2 = Car("toyota",47)
print(s2.mark)
s3= Car("mercedes",0)
print(s3.nam,s3.mark)


#object attribute>class attribute



#final code

class Car:
    brand_name="BMW"

   # def __init__(self,model_name):
        #self.x=model_name
        ##print("welcome")
    def __init__ (self,color,serial_no,customer):
        self.c=color
        self.s=serial_no
        self.cus=customer


#s1 = Car("BM")
#print(s1.x)
s2 = Car("yellow", 7 ,"rofik")
print(s2.c,s2.s,s2.cus)



#more init not supprot
#idea

class Car:
    brand_name = "BMW"

    def __init__(self, model_name=None, color=None, serial_no=None, customer=None):
        if model_name is not None:
            self.x = model_name
            print("Welcome - model initialization")
        elif color is not None and serial_no is not None and customer is not None:
            self.c = color
            self.s = serial_no
            self.cus = customer
            print("Welcome - full details initialization")
        else:
            print("Invalid parameters")

# Create an instance with model name only
s1 = Car(model_name="BMWi")
print(s1.x)

# Create an instance with color, serial number, and customer details
s2 = Car(color="yellow", serial_no=7, customer="rofik")
print(s2.c, s2.s, s2.cus)
